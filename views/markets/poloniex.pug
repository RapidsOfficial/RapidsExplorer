extends menu

block market_view
  script.
    $(document).ready(function(){
      $('#summary-panel').hide();
      var ohlc = !{marketdata.data.chartdata}
      var plot2 = $.jqplot('chart',[ohlc],{
        seriesDefaults:{yaxis:'y2axis'},
        axes: {
          xaxis: {
            renderer:$.jqplot.DateAxisRenderer,
            tickOptions:{formatString:'%R'},
            tickInterval: "2 hours",
            
          },
          y2axis: {
            tickOptions:{formatString:'%.8f'},
          }
        },
        // To make a candle stick chart, set the "candleStick" option to true.
        series: [
          {
            renderer:$.jqplot.OHLCRenderer,
            rendererOptions:{ candleStick:true }
          }
        ],
        highlighter: {
          show: true,
          showMarker:false,
          tooltipAxes: 'xy',
          yvalues: 4,
          formatString:'<table class="jqplot-highlighter"> \
          <tr><td>time:</td><td>%s</td></tr> \
          <tr><td>open:</td><td>%s</td></tr> \
          <tr><td>hi:</td><td>%s</td></tr> \
          <tr><td>low:</td><td>%s</td></tr> \
          <tr><td>close:</td><td>%s</td></tr></table>'
        }
      }); 
      $(window).resize(function () { 
        plot2.replot( { resetAxes: false } );
      });
    });        
  .row
    .hidden-xs.col-md-12  
      #chart-panel.panel.panel-default
        .panel-heading
          strong= t('market.market_title',{market : t('exchange.graviex'),coin :  marketdata.coin, exchange : marketdata.exchange })
          a(href='#')
            span.fa.fa-th-list.pull-right.view-summary.iquidus.market-toggle(data-toggle='tooltip', data-placement='bottom',  title= t('market.view_summary')) 
        .panel-body
          div#chart(style="width:100%;height:300px;")
      #summary-panel.panel.panel-default
        .panel-heading
          strong= t('market.market_title',{market : t('exchange.graviex'),coin :  marketdata.coin, exchange : marketdata.exchange })
          a(href='#')
            span.fa.fa-line-chart.pull-right.view-chart.iquidus.market-toggle(data-toggle='tooltip', data-placement='bottom',  title= t('market.view_chart')) 
        table.table.table-bordered.summary-table 
          thead
            tr
              th= t('market.high')
              th= t('market.low')
              th= t('market.volume')
              th.hidden-xs= t('market.top_bid')
              th.hidden-xs= t('market.top_ask')
              th.hidden-xs= t('market.yeserday')
              th.hidden-xs= t('market.last_price')
              th= t('market.change')
          tbody
            tr
              td #{marketdata.data.summary['high24hr']}
              td #{marketdata.data.summary['low24hr']}
              td #{marketdata.data.summary['baseVolume']}
              td.hidden-xs #{marketdata.data.summary.highestBid}
              td.hidden-xs #{marketdata.data.summary.lowestAsk}
              td.hidden-xs #{marketdata.data.summary.last}
              if marketdata.data.summary.percentChange.substring(0, 1) == '-'
                td.danger #{marketdata.data.summary.percentChange} %
              else
                td.success #{marketdata.data.summary.percentChange} %
    .hidden-md.hidden-lg.col-xs-12
      .panel.panel-default
        .panel-heading
          strong= t('market.market_title',{market : t('exchange.graviex'),coin :  marketdata.coin, exchange : marketdata.exchange })
          a(href='#')
            span.fa.fa-line-chart.pull-right.view-chart-disabled.iquidus.market-toggle(data-toggle='tooltip', data-placement='bottom', title= t('market.no_chart')) 
        table.table.table-bordered.summary-table 
          thead
            tr
              th= t('market.high')
              th= t('market.low')
              th= t('market.volume')
              th= t('market.change')
          tbody
            tr
              td #{marketdata.data.summary['high24hr']}
              td #{marketdata.data.summary['low24hr']}
              td #{marketdata.data.summary['baseVolume']}
              if marketdata.data.summary.percentChange.substring(0, 1) == '-'
                td.danger #{marketdata.data.summary.percentChange} %
              else
                td.success #{marketdata.data.summary.percentChange} %
  .row
    .col-md-6.col-xs-12
      .panel.panel-default
        .panel-heading
          h3.panel-title= t('market.buy_orders')
        table.table.table-striped.table-bordered.order-table
          thead
            tr
              th= t('market.price_coin',{coin : marketdata.exchange })
              th= t('market.total_coin',{coin : marketdata.coin })
              th.hidden-xs= t('market.amount_coin',{coin : marketdata.exchange})
          tbody
            each buy in marketdata.data.buys
              tr
                td
                  =parseFloat(buy.price).toFixed(8)
                td
                  =parseFloat(buy.amount).toFixed(8)
                td.hidden-xs
                  =parseFloat(buy.total).toFixed(8)
    .col-md-6.col-xs-12
      .panel.panel-default
        .panel-heading
          h3.panel-title= t('market.sell_orders')
        table.table.table-striped.table-bordered.order-table
          thead
            tr
              th= t('market.price_coin',{coin : marketdata.exchange })
              th= t('market.total_coin',{coin : marketdata.coin })
              th.hidden-xs= t('market.amount_coin',{coin : marketdata.exchange})
          tbody
            each sell in marketdata.data.sells
              tr
                td
                  =parseFloat(sell.price).toFixed(8)
                td
                  =parseFloat(sell.amount).toFixed(8)
                td.hidden-xs
                  =parseFloat(sell.total).toFixed(8)
  .row   
    .col-md-12
      .panel.panel-default
        .panel-heading
          h3.panel-title= t('market.trade_history')
        table.table.table-hover.history-table.table-bordered(cellspacing="0")
          thead
            tr
              th.hidden-xs= t('market.order_type')
              th= t('market.total_coin',{coin : marketdata.coin })
              th= t('market.price_coin',{coin : marketdata.exchange })
              th= t('market.amount_coin',{coin : marketdata.exchange})
              th= t('market.timestamp')
          tbody
            each trade in marketdata.data.history
              if trade.type == 'buy'
                tr.success
                  td.hidden-xs BUY
                  td
                    =trade.amount
                  td
                    =trade.rate
                  td.hidden-xs
                    =trade.total
                  td.hidden-xs
                    =trade.date
              else
                tr.danger 
                  td.hidden-xs SELL
                  td
                    =trade.amount
                  td
                    =trade.rate
                  td.hidden-xs
                    =trade.total
                  td.hidden-xs
                    =trade.date
      .footer-padding